- platform: template
  lights:
    cabinet_red:
      friendly_name: "Cabinet Red"
      turn_on:
        service: python_script.light
        data:
          state: 'on'
          device_id: '0x01040005'
          brightnes: "{{ brightnes }}"
      turn_off:
        service: python_script.light
        data:
          state: 'off'
          device_id: '0x01040005'
- platform: template
  lights:
    cabinet_green:
      friendly_name: "Cabinet Green"
      turn_on:
        service: python_script.light
        data:
          state: 'on'
          device_id: '0x01040006'
          brightnes: "{{ brightnes }}"
      turn_off:
        service: python_script.light
        data:
          state: 'off'
          device_id: '0x01040006'
- platform: template
  lights:
    cabinet_blue:
      friendly_name: "Cabinet Blue"
      turn_on:
        service: python_script.light
        data:
          state: 'on'
          device_id: '0x01040007'
          brightnes: "{{ brightnes }}"
      turn_off:
        service: python_script.light
        data:
          state: 'off'
          device_id: '0x01040007'

# Example configuration.yaml entry
# light:
#   - platform: template
#     lights:
#       theater_lights:
#         friendly_name: "Theater Lights"
#         level_template: "{{ state_attr('sensor.theater_brightness', 'lux')|int }}"
#         value_template: "{{ state_attr('sensor.theater_brightness', 'lux')|int > 0 }}"
#         temperature_template: "{{states('input_number.temperature_input') | int}}"
#         color_template: "({{states('input_number.h_input') | int}}, {{states('input_number.s_input') | int}})"
#         effect_list_template: "{{ state_attr('light.led_strip', 'effect_list') }}"
#         turn_on:
#           service: script.theater_lights_on
#         turn_off:
#           service: script.theater_lights_off
#         set_level:
#           service: script.theater_lights_level
#           data:
#             brightness: "{{ brightness }}"
#         set_temperature:
#           service: input_number.set_value
#           data:
#             value: "{{ color_temp }}"
#             entity_id: input_number.temperature_input
#         set_white_value:
#           service: input_number.set_value
#           data:
#             value: "{{ white_value }}"
#             entity_id: input_number.white_value_input
#         set_color:
#           - service: input_number.set_value
#             data:
#               value: "{{ h }}"
#               entity_id: input_number.h_input
#           - service: input_number.set_value
#             data:
#               value: "{{ s }}"
#               entity_id: input_number.s_input
#           - service: light.turn_on
#             data_template:
#               entity_id:
#                 - light.led_strip
#               transition: "{{ transition | float }}"
#               hs_color:
#                 - "{{ rgb[0] }}"
#                 - "{{ rgb[1] }}"
#                 - "{{ rgb[2] }}"
#         set_effect:
#           - service: light.turn_on
#             data_template:
#               entity_id:
#                 - light.led_strip
#               effect: "{{ effect }}"
#         supports_transition_template: "{{ true }}"